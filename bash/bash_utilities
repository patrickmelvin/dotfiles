# Open latest migration file
rm_last_migration() {
  rm db/migrate/$(ls db/migrate | sort | tail -1)
}

last_migration() {
  vim db/migrate/$(ls db/migrate/ | sort | tail -1)
}

nth_migration() {
  vim db/migrate/$(ls db/migrate/ | sort | tail -$1 | head -1)
}

find_task() {
  bundle exec rake -T | grep $1
}

run_modified_specs() {
  bundle exec rspec $(git status -s | grep _spec.rb | cut -b 3-) --tag integration
}

git_diff_relative() {
  git diff --no-prefix --src-prefix=$(git rev-parse --show-cdup) --dst-prefix=$(git rev-parse --show-cdup) --color-moved=plain $@
}

remove_prys() {
  sed -i -- "/require 'pry'; binding.pry/d" `git diff --name-only`
  sed -i -- 's/binding.pry//g' `git diff --name-only`
}

# Require renogen
rgen() {
  renogen new $1
  vim change_log/next/$1.yml
}

gsu() {
  git branch --set-upstream-to=origin/`git branch | grep \* | cut -d ' ' -f2-` `git branch | grep \* | cut -d ' ' -f2-`
}

remove_branches() {
  remove_stashes `echo "$@" | sed 's/ /|/g'`
  git branch -D "$@"
}

remove_stashes() {
  git stash list | grep -E $1 | awk '{print substr($1, 1, length($1)-1)}' | sort -r -t { -k 2 -g |  while read -r r; do git stash drop "$r"; done
}

ansi_colours() {
  for attr in $(seq 0 1); do
    for fg in $(seq 30 37); do
      for bg in $(seq 40 47); do
        printf "\033[$attr;${bg};${fg}m$attr;$fg;$bg\033[m "
      done
      echo
    done
  done
}
